@page "/applications/details/{Id:int}"
@using Gates.Shared
@using Gates.Shared.Data;
@using System.Text.Json;
@inject NavigationManager _navigationManager
@inject HttpClient Http

<PageTitle>Apps</PageTitle>
<div>
        <h3>Apps</h3>
</div>
@if (app == null || canary == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <MudPaper>
        <MudCard>
            <MudCardContent>
                <MudText Typo="Typo.h5">@app.Name</MudText>
                <MudText Typo="Typo.body2">@app.Namespace</MudText>
                <MudText Typo="Typo.body2">@app.ContainerPorts </MudText>
                <MudText Typo="Typo.body2">@app.FlaggerStatus </MudText>

                <MudText Typo="Typo.body2"> Interval : @canary?.interval </MudText>
                <MudText Typo="Typo.body2"> Threshold : @canary?.threshold </MudText>
                <MudText Typo="Typo.body2"> StepWeight : @canary?.stepWeight </MudText>
                <MudText Typo="Typo.body2"> MaxWeight : @canary?.maxWeight </MudText>

                @foreach (var item in hooks)
                {
                    <MudText Typo="Typo.body2"> URL : @item.url </MudText>
                    <MudText Typo="Typo.body2"> Type : @item.type </MudText>
                    <MudText Typo="Typo.body2"> Name : @item.name </MudText>
                }
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Filled"  Color="Color.Primary">Generate Canary File</MudButton>
            </MudCardActions>
        </MudCard>
    </MudPaper>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private AppDetailModel? app;

    private CanaryModel? canary;

    List<Webhook> hooks = new List<Webhook>();

    protected override async Task OnInitializedAsync()
    {
        await Refresh();
    }


    async Task Refresh()
    {
        app = await Http.GetFromJsonAsync<AppDetailModel>($"api/app/{Id}");
        canary = await Http.GetFromJsonAsync<CanaryModel>($"api/canary/{Id}");
        if (canary.Webhooks != null)
        {
            hooks = JsonSerializer.Deserialize<List<Webhook>>(canary?.Webhooks);
        }

    }

    void Register()
    {
        _navigationManager.NavigateTo("/register/app");
    }
    public class Webhook
    {
        public string? name { get; set; }
        public string? type { get; set; }
        public string? url { get; set; }
    }
}

